import './code-editor.scss';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: import("vue").PropType<import("./code-editor-types").Mode>;
        default: string;
    };
    originalText: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<import("./code-editor-types").Theme>;
        default: string;
    };
    autoHeight: {
        type: BooleanConstructor;
        default: boolean;
    };
    refreshAll: {
        type: BooleanConstructor;
        default: boolean;
    };
    offsetLeft: {
        type: NumberConstructor;
    };
    addCommentIcon: {
        type: StringConstructor;
        default: string;
    };
    expandCommentIcon: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: ObjectConstructor;
        default: () => {};
    };
    mouseTargetTypes: {
        type: import("vue").PropType<number[]>;
        default: () => number[];
    };
    editorDecorations: {
        type: import("vue").PropType<import("./code-editor-types").Decoration[]>;
        default: () => never[];
    };
    comments: {
        type: import("vue").PropType<import("./code-editor-types").Comment[]>;
        default: () => never[];
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "click" | "afterEditorInit" | "update: modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    mode: {
        type: import("vue").PropType<import("./code-editor-types").Mode>;
        default: string;
    };
    originalText: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<import("./code-editor-types").Theme>;
        default: string;
    };
    autoHeight: {
        type: BooleanConstructor;
        default: boolean;
    };
    refreshAll: {
        type: BooleanConstructor;
        default: boolean;
    };
    offsetLeft: {
        type: NumberConstructor;
    };
    addCommentIcon: {
        type: StringConstructor;
        default: string;
    };
    expandCommentIcon: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: ObjectConstructor;
        default: () => {};
    };
    mouseTargetTypes: {
        type: import("vue").PropType<number[]>;
        default: () => number[];
    };
    editorDecorations: {
        type: import("vue").PropType<import("./code-editor-types").Decoration[]>;
        default: () => never[];
    };
    comments: {
        type: import("vue").PropType<import("./code-editor-types").Comment[]>;
        default: () => never[];
    };
}>>, {
    options: Record<string, any>;
    comments: import("./code-editor-types").Comment[];
    mode: import("./code-editor-types").Mode;
    modelValue: string;
    originalText: string;
    theme: import("./code-editor-types").Theme;
    autoHeight: boolean;
    refreshAll: boolean;
    addCommentIcon: string;
    expandCommentIcon: string;
    mouseTargetTypes: number[];
    editorDecorations: import("./code-editor-types").Decoration[];
}>;
export default _default;
